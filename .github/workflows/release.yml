name: Create release
run-name: Create release ${{ github.ref_name }} by @${{ github.actor }}
on: workflow_dispatch

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.actor }}
  cancel-in-progress: true

env:
  AWS_REGION: ap-northeast-1

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release - ${{ github.ref_name }}
          draft: false
          prerelease: false
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}

  upload-dapp-stage-assets:
    runs-on: ubuntu-latest
    needs: create-release
    # defaults:
    #   run:
    #     working-directory: ./packages/dapp
    strategy:
      matrix:
        node-version: [16.x]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - run: yarn install
      - run: npm run dapp:build
        env:
          REACT_APP_DEFAULT_BRIDGE_DIRECTION: "gusandbox-goerli-stage"
          REACT_APP_ENABLED_BRIDGES: "gusandbox-goerli-stage"
          REACT_APP_GAS_PRICE_SUPPLIER_URL: "https://gasprice.poa.network/"
          REACT_APP_GAS_PRICE_SPEED_TYPE: "standard"
          REACT_APP_GAS_PRICE_FALLBACK_GWEI: "50"
          REACT_APP_GAS_PRICE_UPDATE_INTERVAL: "60000"
          REACT_APP_ETH_PRICE_API_URL: "https://api.coingecko.com/api/v3/simple/price?ids=ethereum&vs_currencies=USD"
          REACT_APP_ETH_PRICE_UPDATE_INTERVAL: "60000"
          REACT_APP_TITLE: "G.U.Bridge NFT - %c"
          REACT_APP_DESCRIPTION: "The G.U.Bridge NFT extension for the Arbitrary Message Bridge to the xDai chain is the simplest way to transfer ANY ERC721/ERC1155 token to the xDai chain."
          REACT_APP_UI_STATUS_UPDATE_INTERVAL: "5000"
          REACT_APP_DEBUG_LOGS: "true"
          REACT_APP_GRAPH_HEALTH_UPDATE_INTERVAL: "60000"
          REACT_APP_GRAPH_HEALTH_THRESHOLD_BLOCKS: "10"
          REACT_APP_GUSANBOX_RPC_URL: "https://sandbox1.japanopenchain.org:8545/"
          REACT_APP_GOERLI_RPC_URL: "https://eth-goerli.g.alchemy.com/v2/3dILjPem0lnHDrK2HCxbM5YwIN7w7KY5/"

      - name: Generate deployment package
        run: cd packages/dapp && mv package-copy.json package.json && zip -r deploy.zip build package.json package-lock.json
      
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./packages/dapp/deploy.zip
          asset_name: dapp-stage-${{ github.ref_name }}.zip
          asset_content_type: application/zip
  upload-dapp-production-assets:
    runs-on: ubuntu-latest
    needs: create-release
    # defaults:
    #   run:
    #     working-directory: ./packages/dapp
    strategy:
      matrix:
        node-version: [16.x]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - run: yarn install
      - run: npm run dapp:build
        env:
          REACT_APP_DEFAULT_BRIDGE_DIRECTION: "joc-ethereum"
          REACT_APP_ENABLED_BRIDGES: "joc-ethereum"
          REACT_APP_GAS_PRICE_SUPPLIER_URL: "https://gasprice.poa.network/"
          REACT_APP_GAS_PRICE_SPEED_TYPE: "standard"
          REACT_APP_GAS_PRICE_FALLBACK_GWEI: "50"
          REACT_APP_GAS_PRICE_UPDATE_INTERVAL: "60000"
          REACT_APP_ETH_PRICE_API_URL: "https://api.coingecko.com/api/v3/simple/price?ids=ethereum&vs_currencies=USD"
          REACT_APP_ETH_PRICE_UPDATE_INTERVAL: "60000"
          REACT_APP_TITLE: "G.U.Bridge NFT - %c"
          REACT_APP_DESCRIPTION: "The G.U.Bridge NFT extension for the Arbitrary Message Bridge to the Japan Open chain is the simplest way to transfer ANY ERC721/ERC1155 token to the Japan Open chain."
          REACT_APP_UI_STATUS_UPDATE_INTERVAL: "5000"
          REACT_APP_DEBUG_LOGS: "true"
          REACT_APP_GRAPH_HEALTH_UPDATE_INTERVAL: "60000"
          REACT_APP_GRAPH_HEALTH_THRESHOLD_BLOCKS: "10"
          REACT_APP_JOC_RPC_URL: "https://mainnet.japanopenchain.org:8545/"
          REACT_APP_ETHEREUM_RPC_URL: "https://eth-mainnet.g.alchemy.com/v2/5G7UdpHTbR9ZtKWFVFs0SdEF8gbvdln1"

      - name: Generate deployment package
        run: cd packages/dapp && mv package-copy.json package.json && zip -r deploy.zip build package.json package-lock.json
      
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./packages/dapp/deploy.zip
          asset_name: dapp-production-${{ github.ref_name }}.zip
          asset_content_type: application/zip